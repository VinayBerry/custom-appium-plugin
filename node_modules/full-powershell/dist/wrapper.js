"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.wrap = void 0;
var os_1 = __importDefault(require("os"));
function serialise(variable, format) {
    if (format === 'json') {
        return "ConvertTo-Json -InputObject @(".concat(variable, ") -Compress");
    }
    if (format === 'string') {
        return "ConvertTo-Json -InputObject @(".concat(variable, " | ForEach-Object { Out-String -InputObject $_ }) -Compress");
    }
    return "@(".concat(variable, ")");
}
function wrap(command, delimit_head, delimit_tail, out_verbose, out_debug, format) {
    var template = "\n    $OutputEncoding = [Console]::OutputEncoding = [Text.UTF8Encoding]::UTF8;\n    $vv = \"".concat(out_verbose, "\"\n    $dv = \"").concat(out_debug, "\"\n    $delimit_head_A = \"").concat(delimit_head.slice(0, 5), "\"\n    $delimit_head_B = \"").concat(delimit_head.slice(5), "\"\n    $delimit_tail_A = \"").concat(delimit_tail.slice(0, 5), "\"\n    $delimit_tail_B = \"").concat(delimit_tail.slice(5), "\"\n    try {\n        Invoke-Command -NoNewScope -ScriptBlock {\n            ").concat(command, "\n        } 1>$null 2>$null 3>$null 4>$vv 5>$dv 6>$null -ov ov -ev ev -wv wv -iv iv\n    } \n    catch {\n        $ev = $_\n    }\n    finally {\n\n        $verbose = Get-Content $vv\n        $debug = Get-Content $dv\n\n        Remove-Item $vv | Out-Null\n        Remove-Item $dv | Out-Null\n\n        $rxjs_pwsh = [pscustomobject]@{ \n            result = [pscustomobject]@{ \n                success = ").concat(serialise('$ov', format), "\n                error = ").concat(serialise('$ev', 'string'), "\n                warning = ").concat(serialise('$wv', 'string'), "\n                verbose = ").concat(serialise('$verbose', 'string'), "\n                debug = ").concat(serialise('$debug', 'string'), "\n                info = ").concat(serialise('$iv', 'string'), "\n                format = ").concat(format ? "\"".concat(format, "\"") : "$null", "\n            }\n        }\n        $rxjs_pwsh_json = $rxjs_pwsh | ConvertTo-Json -Depth 2\n        \"$delimit_head_A$delimit_head_B\" + $rxjs_pwsh_json + \"$delimit_tail_A$delimit_tail_B\"\n    }\n    ").concat(os_1.default.EOL, "\n    ");
    return template;
}
exports.wrap = wrap;
